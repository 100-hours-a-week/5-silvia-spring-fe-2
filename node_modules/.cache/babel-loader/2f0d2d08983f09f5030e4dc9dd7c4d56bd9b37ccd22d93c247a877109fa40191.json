{"ast":null,"code":"var _jsxFileName = \"/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/pages/PostCreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport PostForm from '../components/PostForm';\nimport { useNavigate } from 'react-router-dom';\nimport ToastMessage from \"../components/ToastMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCreatePage = () => {\n  _s();\n  const [successLabel, setSuccessLabel] = useState('');\n  const [errorLabel, setErrorLabel] = useState('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const navigate = useNavigate();\n  const handleTitleChange = e => setTitle(e.target.value);\n  const handleContentChange = e => setContent(e.target.value);\n  const handleImageUrlChange = url => setImageUrl(url);\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('postImage', file);\n    try {\n      setUploading(true);\n      const response = await axios.post('http://localhost:3001/api/posts/image', formData);\n      handleImageUrlChange(response.data.postImage);\n      setUploading(false);\n    } catch (error) {\n      console.error('Failed to upload image:', error);\n      alert(`Failed to upload image: ${error.response ? error.response.data || error.response.statusText : 'Server error'}`);\n      setUploading(false);\n    }\n  };\n  const clearLabels = () => {\n    setSuccessLabel('');\n    setErrorLabel('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !content) {\n      setErrorLabel('ü•ë Ï†úÎ™©Í≥º ÎÇ¥Ïö©ÏùÑ Î™®Îëê ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/api/posts', {\n        postTitle: title,\n        postContents: content,\n        postImage: imageUrl\n      }, {\n        withCredentials: true\n      });\n      setSuccessLabel('Í≤åÏãúÍ∏ÄÏù¥ ÏûëÏÑ±ÎêòÏóàÏäµÎãàÎã§.');\n      setTimeout(() => {\n        navigate('/main');\n      }, 2000);\n    } catch (error) {\n      console.error('Error creating post:', error);\n      setErrorLabel('Í≤åÏãúÍ∏Ä ÏûëÏÑ± Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostCreatePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Text24\",\n      children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      TitleValue: title,\n      ContentValue: content,\n      onTitleChange: handleTitleChange,\n      onContentChange: handleContentChange,\n      onImageUrlChange: handleImageUrlChange,\n      onSubmit: handleSubmit,\n      onImageUpload: handleImageUpload,\n      isUploading: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastMessage, {\n      successLabel: successLabel,\n      errorLabel: errorLabel,\n      clearLabels: clearLabels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCreatePage, \"I57t7+TarbNkg9PMUtd6mEiP6Io=\", false, function () {\n  return [useNavigate];\n});\n_c = PostCreatePage;\nexport default PostCreatePage;\nvar _c;\n$RefreshReg$(_c, \"PostCreatePage\");","map":{"version":3,"names":["React","useState","axios","PostForm","useNavigate","ToastMessage","jsxDEV","_jsxDEV","PostCreatePage","_s","successLabel","setSuccessLabel","errorLabel","setErrorLabel","title","setTitle","content","setContent","imageUrl","setImageUrl","uploading","setUploading","navigate","handleTitleChange","e","target","value","handleContentChange","handleImageUrlChange","url","handleImageUpload","event","file","files","alert","formData","FormData","append","response","post","data","postImage","error","console","statusText","clearLabels","handleSubmit","preventDefault","postTitle","postContents","withCredentials","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TitleValue","ContentValue","onTitleChange","onContentChange","onImageUrlChange","onSubmit","onImageUpload","isUploading","_c","$RefreshReg$"],"sources":["/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/pages/PostCreatePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport PostForm from '../components/PostForm';\nimport { useNavigate } from 'react-router-dom';\nimport ToastMessage from \"../components/ToastMessage\";\n\nconst PostCreatePage = () => {\n    const [successLabel, setSuccessLabel] = useState('');\n    const [errorLabel, setErrorLabel] = useState('');\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n    const [uploading, setUploading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleTitleChange = (e) => setTitle(e.target.value);\n    const handleContentChange = (e) => setContent(e.target.value);\n    const handleImageUrlChange = (url) => setImageUrl(url);\n\n    const handleImageUpload = async (event) => {\n        const file = event.target.files[0];\n        if (!file) {\n            alert('Please select a file.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('postImage', file);\n\n        try {\n            setUploading(true);\n            const response = await axios.post('http://localhost:3001/api/posts/image', formData);\n            handleImageUrlChange(response.data.postImage);\n            setUploading(false);\n        } catch (error) {\n            console.error('Failed to upload image:', error);\n            alert(`Failed to upload image: ${error.response ? (error.response.data || error.response.statusText) : 'Server error'}`);\n            setUploading(false);\n        }\n    };\n\n    const clearLabels = () => {\n        setSuccessLabel('');\n        setErrorLabel('');\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!title || !content) {\n            setErrorLabel('ü•ë Ï†úÎ™©Í≥º ÎÇ¥Ïö©ÏùÑ Î™®Îëê ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');\n            return;\n        }\n\n        try {\n            await axios.post('http://localhost:3001/api/posts', {\n                postTitle: title,\n                postContents: content,\n                postImage: imageUrl\n            }, {\n                withCredentials: true\n            });\n\n            setSuccessLabel('Í≤åÏãúÍ∏ÄÏù¥ ÏûëÏÑ±ÎêòÏóàÏäµÎãàÎã§.');\n            setTimeout(() => {\n                navigate('/main');\n            }, 2000);\n        } catch (error) {\n            console.error('Error creating post:', error);\n            setErrorLabel('Í≤åÏãúÍ∏Ä ÏûëÏÑ± Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');\n        }\n    };\n\n    return (\n        <div className=\"PostCreatePage\">\n            <div className=\"Text24\">Í≤åÏãúÍ∏Ä ÏûëÏÑ±</div>\n            <PostForm\n                TitleValue={title}\n                ContentValue={content}\n                onTitleChange={handleTitleChange}\n                onContentChange={handleContentChange}\n                onImageUrlChange={handleImageUrlChange}\n                onSubmit={handleSubmit}\n                onImageUpload={handleImageUpload}\n                isUploading={uploading}\n            />\n            <ToastMessage successLabel={successLabel} errorLabel={errorLabel} clearLabels={clearLabels} />\n        </div>\n    );\n};\n\nexport default PostCreatePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}