{"ast":null,"code":"var _jsxFileName = \"/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/pages/PostEditPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport PostForm from '../components/PostForm';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostEditPage = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [uploading, setUploading] = useState(false);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/api/posts/${postId}`);\n        setPost(response.data);\n        setTitle(response.data.title);\n        setContent(response.data.article);\n        setImageUrl(response.data.post_picture);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPost();\n  }, [postId]);\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n  const handleContentChange = e => {\n    setContent(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://localhost:3001/api/posts/${postId}`, {\n        postTitle: title,\n        postContents: content,\n        postImage: imageUrl\n      }, {\n        withCredentials: true\n      });\n      if (response.status !== 200) {\n        throw new Error('Failed to update post');\n      }\n      alert('게시글이 업데이트되었습니다.');\n      navigate(`/post/${postId}`);\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('게시글 업데이트 중 오류가 발생했습니다.');\n    }\n  };\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (file && postId) {\n      const formData = new FormData();\n      formData.append('postImage', file);\n      setUploading(true);\n      try {\n        const response = await axios.put(`http://localhost:3001/api/posts/${postId}/image`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          withCredentials: true\n        });\n        if (response.status !== 200) {\n          throw new Error('Failed to upload image');\n        }\n        setImageUrl(response.data.post_picture);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n        alert('이미지 업로드 중 오류가 발생했습니다.');\n      } finally {\n        setUploading(false);\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostEditPage\",\n    children: /*#__PURE__*/_jsxDEV(PostForm, {\n      postId: postId,\n      TitleValue: title,\n      ContentValue: content,\n      ImageUrlValue: imageUrl,\n      onTitleChange: handleTitleChange,\n      onContentChange: handleContentChange,\n      onSubmit: handleSubmit,\n      onImageUpload: handleImageUpload,\n      isUploading: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(PostEditPage, \"Vc+wJKIzGyroSFuyi4MzG3+cDG0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostEditPage;\nexport default PostEditPage;\nvar _c;\n$RefreshReg$(_c, \"PostEditPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","PostForm","axios","jsxDEV","_jsxDEV","PostEditPage","_s","postId","navigate","post","setPost","loading","setLoading","error","setError","title","setTitle","content","setContent","imageUrl","setImageUrl","uploading","setUploading","fetchPost","response","get","data","article","post_picture","message","handleTitleChange","e","target","value","handleContentChange","handleSubmit","preventDefault","put","postTitle","postContents","postImage","withCredentials","status","Error","alert","console","handleImageUpload","file","files","formData","FormData","append","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","className","TitleValue","ContentValue","ImageUrlValue","onTitleChange","onContentChange","onSubmit","onImageUpload","isUploading","_c","$RefreshReg$"],"sources":["/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/pages/PostEditPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport PostForm from '../components/PostForm';\nimport axios from \"axios\";\n\nconst PostEditPage = () => {\n    const { postId } = useParams();\n    const navigate = useNavigate();\n    const [post, setPost] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n    const [uploading, setUploading] = useState(false);\n\n    useEffect(() => {\n        const fetchPost = async () => {\n            try {\n                const response = await axios.get(`http://localhost:3001/api/posts/${postId}`);\n                setPost(response.data);\n                setTitle(response.data.title);\n                setContent(response.data.article);\n                setImageUrl(response.data.post_picture);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchPost();\n    }, [postId]);\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const handleContentChange = (e) => {\n        setContent(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.put(`http://localhost:3001/api/posts/${postId}`, {\n                postTitle: title,\n                postContents: content,\n                postImage: imageUrl\n            }, {\n                withCredentials: true,\n            });\n\n            if (response.status !== 200) {\n                throw new Error('Failed to update post');\n            }\n\n            alert('게시글이 업데이트되었습니다.');\n            navigate(`/post/${postId}`);\n        } catch (error) {\n            console.error('Error updating post:', error);\n            alert('게시글 업데이트 중 오류가 발생했습니다.');\n        }\n    };\n\n    const handleImageUpload = async (e) => {\n        const file = e.target.files[0];\n        if (file && postId) {\n            const formData = new FormData();\n            formData.append('postImage', file);\n\n            setUploading(true);\n            try {\n                const response = await axios.put(`http://localhost:3001/api/posts/${postId}/image`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                    withCredentials: true,\n                });\n\n                if (response.status !== 200) {\n                    throw new Error('Failed to upload image');\n                }\n                setImageUrl(response.data.post_picture);\n            } catch (error) {\n                console.error('Error uploading image:', error);\n                alert('이미지 업로드 중 오류가 발생했습니다.');\n            } finally {\n                setUploading(false);\n            }\n        }\n    };\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    if (error) {\n        return <p>Error: {error}</p>;\n    }\n\n    if (!post) {\n        return <p>Post not found</p>;\n    }\n\n    return (\n        <div className=\"PostEditPage\">\n            <PostForm\n                postId={postId}\n                TitleValue={title}\n                ContentValue={content}\n                ImageUrlValue={imageUrl}\n                onTitleChange={handleTitleChange}\n                onContentChange={handleContentChange}\n                onSubmit={handleSubmit}\n                onImageUpload={handleImageUpload}\n                isUploading={uploading}\n            />\n        </div>\n    );\n};\n\nexport default PostEditPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}