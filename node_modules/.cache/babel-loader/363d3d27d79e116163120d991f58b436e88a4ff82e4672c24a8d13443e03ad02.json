{"ast":null,"code":"var _jsxFileName = \"/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/components/SignUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { EmailInputField, PasswordInputField, PasswordConfirmInputField, NicknameInputField } from './InputField';\nimport ToastMessage from \"./ToastMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = () => {\n  _s();\n  const [successLabel, setSuccessLabel] = useState('');\n  const [errorLabel, setErrorLabel] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [profileImg, setProfileImg] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const [nicknameError, setNicknameError] = useState('');\n  const [uploadError, setUploadError] = useState('');\n  const [previewSrc, setPreviewSrc] = useState('');\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n    validateEmail(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    validatePassword(e.target.value);\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n    validateConfirmPassword(password, e.target.value);\n  };\n  const handleNicknameChange = e => {\n    setNickname(e.target.value);\n    validateNickname(e.target.value);\n  };\n  const handleFileChange = async e => {\n    const file = e.target.files[0];\n\n    // Display a preview of the selected image\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreviewSrc(reader.result);\n    };\n    reader.readAsDataURL(file);\n\n    // Automatically upload the image\n    await handleUpload(file);\n  };\n  const clearLabels = () => {\n    setSuccessLabel('');\n    setErrorLabel('');\n  };\n  const handleUpload = async file => {\n    if (!file) {\n      setUploadError('파일을 선택해주세요.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('profileimg', file);\n    try {\n      const response = await fetch('http://localhost:3001/api/register/profileimg', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setProfileImg(data.profileimg);\n        setUploadError('');\n      } else {\n        const errorText = await response.text();\n        setUploadError(`이미지 업로드 실패: ${errorText}`);\n      }\n    } catch (error) {\n      console.error('Error uploading the image:', error);\n      setUploadError('이미지 업로드 중 오류가 발생했습니다.');\n    }\n  };\n  const validateEmail = async email => {\n    if (!email) {\n      setEmailError('*이메일을 입력해주세요.');\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setEmailError('*올바른 이메일 주소 형식을 입력해주세요. (예: 123@example.com)');\n    } else {\n      // Check for duplicate email\n      try {\n        const response = await fetch('http://localhost:3001/api/accounts');\n        const data = await response.json();\n        const isDuplicate = data.users.some(user => user.email === email);\n        if (isDuplicate) {\n          setEmailError('*중복된 이메일입니다.');\n        } else {\n          setEmailError('');\n        }\n      } catch (error) {\n        console.error('Error checking email duplication:', error);\n        setEmailError('이메일 중복 확인 중 오류가 발생했습니다.');\n      }\n    }\n  };\n  const validatePassword = password => {\n    const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*]).{8,20}$/;\n    if (!password) {\n      setPasswordError('*비밀번호를 입력해주세요.');\n    } else if (!passwordPattern.test(password)) {\n      setPasswordError('*비밀번호는 8자 이상, 20자 이하이며, 대문자, 소문자, 숫자, 특수문자를 각각 최소 1개 포함해야 합니다.');\n    } else {\n      setPasswordError('');\n    }\n  };\n  const validateConfirmPassword = (password, confirmPassword) => {\n    if (!confirmPassword) {\n      setConfirmPasswordError('*비밀번호 확인을 입력해주세요.');\n    } else if (password !== confirmPassword) {\n      setConfirmPasswordError('*비밀번호가 일치하지 않습니다.');\n    } else {\n      setConfirmPasswordError('');\n    }\n  };\n  const validateNickname = nickname => {\n    if (!nickname) {\n      setNicknameError('*닉네임을 입력해주세요.');\n    } else if (/\\s/.test(nickname)) {\n      setNicknameError('*닉네임에는 띄어쓰기를 포함할 수 없습니다.');\n    } else if (nickname.length > 10) {\n      setNicknameError('*닉네임은 최대 10자 까지 작성 가능합니다.');\n    } else {\n      setNicknameError('');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await validateEmail(email);\n    validatePassword(password);\n    validateConfirmPassword(password, confirmPassword);\n    validateNickname(nickname);\n    if (!emailError && !passwordError && !confirmPasswordError && !nicknameError) {\n      try {\n        const response = await fetch('http://localhost:3001/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            nickname,\n            profileimg: profileImg\n          })\n        });\n        if (response.ok) {\n          setSuccessLabel('🥑 회원가입 성공!');\n          // alert('회원가입 성공!');\n        } else {\n          // const errorText = await response.text();\n          setErrorLabel(`🥑 회원가입 실패`);\n          // alert(`회원가입 실패: ${errorText}`);\n        }\n      } catch (error) {\n        console.error('Error during registration:', error);\n        alert('회원가입 중 오류가 발생했습니다.');\n      }\n    } else {\n      alert('입력 정보를 확인해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"SignupForm\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Text32\",\n      style: {\n        marginBottom: '51px'\n      },\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SignUpProfilePickerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SignUpProfileLabel\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD504\\uB85C\\uD544 \\uC0AC\\uC9C4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SignUpProfileImgPicker\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          id: \"profileImgInput\",\n          onChange: handleFileChange,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"profileImgInput\",\n          style: {\n            width: '149px',\n            height: '149px',\n            borderRadius: '50%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#C4C4C4',\n            cursor: 'pointer',\n            position: 'relative',\n            overflow: 'hidden'\n          },\n          children: previewSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewSrc,\n            alt: \"Profile Preview\",\n            style: {\n              width: '149px',\n              height: '149px',\n              borderRadius: '50%',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '24px',\n              height: '24px',\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                width: '1.2px',\n                height: '24px',\n                backgroundColor: 'black',\n                transform: 'translate(-50%, -50%)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                width: '24px',\n                height: '1.2px',\n                backgroundColor: 'black',\n                transform: 'translate(-50%, -50%)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red',\n            marginTop: '10px'\n          },\n          children: uploadError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmailInputField\n    // label=\"이메일*\"\n    , {\n      value: email,\n      onChange: handleEmailChange,\n      error: emailError,\n      labelStyle: {\n        fontSize: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PasswordInputField\n    // label=\"비밀번호*\"\n    , {\n      value: password,\n      onChange: handlePasswordChange,\n      error: passwordError,\n      labelStyle: {\n        fontSize: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PasswordConfirmInputField\n    // label=\"비밀번호 확인*\"\n    , {\n      value: confirmPassword,\n      onChange: handleConfirmPasswordChange,\n      error: confirmPasswordError,\n      labelStyle: {\n        fontSize: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NicknameInputField\n    // label=\"닉네임*\"\n    , {\n      value: nickname,\n      onChange: handleNicknameChange,\n      error: nicknameError,\n      labelStyle: {\n        fontSize: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"SubmitBtn\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signUpTextContainer\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0,\n          fontSize: '14px'\n        },\n        children: \"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uB098\\uC694? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        className: \"Text14\",\n        style: {\n          marginLeft: '5px',\n          fontWeight: '650'\n        },\n        children: \" \\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastMessage, {\n      successLabel: successLabel,\n      errorLabel: errorLabel,\n      clearLabels: clearLabels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUpForm, \"wXRcp89FXYV46jTqS0mUVd7Y28M=\");\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","EmailInputField","PasswordInputField","PasswordConfirmInputField","NicknameInputField","ToastMessage","jsxDEV","_jsxDEV","SignUpForm","_s","successLabel","setSuccessLabel","errorLabel","setErrorLabel","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","nickname","setNickname","profileImg","setProfileImg","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","nicknameError","setNicknameError","uploadError","setUploadError","previewSrc","setPreviewSrc","handleEmailChange","e","target","value","validateEmail","handlePasswordChange","validatePassword","handleConfirmPasswordChange","validateConfirmPassword","handleNicknameChange","validateNickname","handleFileChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","handleUpload","clearLabels","formData","FormData","append","response","fetch","method","body","ok","data","json","profileimg","errorText","text","error","console","test","isDuplicate","users","some","user","passwordPattern","length","handleSubmit","preventDefault","headers","JSON","stringify","alert","className","onSubmit","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","id","onChange","display","htmlFor","width","height","borderRadius","alignItems","justifyContent","backgroundColor","cursor","position","overflow","src","alt","objectFit","top","left","transform","color","marginTop","labelStyle","fontSize","margin","href","marginLeft","fontWeight","_c","$RefreshReg$"],"sources":["/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/components/SignUpForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { EmailInputField, PasswordInputField, PasswordConfirmInputField, NicknameInputField } from './InputField';\nimport ToastMessage from \"./ToastMessage\";\n\nconst SignUpForm = () => {\n    const [successLabel, setSuccessLabel] = useState('');\n    const [errorLabel, setErrorLabel] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [nickname, setNickname] = useState('');\n    const [profileImg, setProfileImg] = useState('');\n\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [confirmPasswordError, setConfirmPasswordError] = useState('');\n    const [nicknameError, setNicknameError] = useState('');\n    const [uploadError, setUploadError] = useState('');\n    const [previewSrc, setPreviewSrc] = useState('');\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value);\n        validateEmail(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n        validatePassword(e.target.value);\n    };\n\n    const handleConfirmPasswordChange = (e) => {\n        setConfirmPassword(e.target.value);\n        validateConfirmPassword(password, e.target.value);\n    };\n\n    const handleNicknameChange = (e) => {\n        setNickname(e.target.value);\n        validateNickname(e.target.value);\n    };\n\n    const handleFileChange = async (e) => {\n        const file = e.target.files[0];\n\n        // Display a preview of the selected image\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            setPreviewSrc(reader.result);\n        };\n        reader.readAsDataURL(file);\n\n        // Automatically upload the image\n        await handleUpload(file);\n    };\n\n    const clearLabels = () => {\n        setSuccessLabel('');\n        setErrorLabel('');\n    }\n\n    const handleUpload = async (file) => {\n        if (!file) {\n            setUploadError('파일을 선택해주세요.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('profileimg', file);\n\n        try {\n            const response = await fetch('http://localhost:3001/api/register/profileimg', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setProfileImg(data.profileimg);\n                setUploadError('');\n            } else {\n                const errorText = await response.text();\n                setUploadError(`이미지 업로드 실패: ${errorText}`);\n            }\n        } catch (error) {\n            console.error('Error uploading the image:', error);\n            setUploadError('이미지 업로드 중 오류가 발생했습니다.');\n        }\n    };\n\n    const validateEmail = async (email) => {\n        if (!email) {\n            setEmailError('*이메일을 입력해주세요.');\n        } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n            setEmailError('*올바른 이메일 주소 형식을 입력해주세요. (예: 123@example.com)');\n        } else {\n            // Check for duplicate email\n            try {\n                const response = await fetch('http://localhost:3001/api/accounts');\n                const data = await response.json();\n                const isDuplicate = data.users.some(user => user.email === email);\n                if (isDuplicate) {\n                    setEmailError('*중복된 이메일입니다.');\n                } else {\n                    setEmailError('');\n                }\n            } catch (error) {\n                console.error('Error checking email duplication:', error);\n                setEmailError('이메일 중복 확인 중 오류가 발생했습니다.');\n            }\n        }\n    };\n\n    const validatePassword = (password) => {\n        const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*]).{8,20}$/;\n        if (!password) {\n            setPasswordError('*비밀번호를 입력해주세요.');\n        } else if (!passwordPattern.test(password)) {\n            setPasswordError('*비밀번호는 8자 이상, 20자 이하이며, 대문자, 소문자, 숫자, 특수문자를 각각 최소 1개 포함해야 합니다.');\n        } else {\n            setPasswordError('');\n        }\n    };\n\n    const validateConfirmPassword = (password, confirmPassword) => {\n        if (!confirmPassword) {\n            setConfirmPasswordError('*비밀번호 확인을 입력해주세요.');\n        } else if (password !== confirmPassword) {\n            setConfirmPasswordError('*비밀번호가 일치하지 않습니다.');\n        } else {\n            setConfirmPasswordError('');\n        }\n    };\n\n    const validateNickname = (nickname) => {\n        if (!nickname) {\n            setNicknameError('*닉네임을 입력해주세요.');\n        } else if (/\\s/.test(nickname)) {\n            setNicknameError('*닉네임에는 띄어쓰기를 포함할 수 없습니다.');\n        } else if (nickname.length > 10) {\n            setNicknameError('*닉네임은 최대 10자 까지 작성 가능합니다.');\n        } else {\n            setNicknameError('');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        await validateEmail(email);\n        validatePassword(password);\n        validateConfirmPassword(password, confirmPassword);\n        validateNickname(nickname);\n\n        if (!emailError && !passwordError && !confirmPasswordError && !nicknameError) {\n            try {\n                const response = await fetch('http://localhost:3001/api/register', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ email, password, nickname, profileimg: profileImg }),\n                });\n\n                if (response.ok) {\n                    setSuccessLabel('🥑 회원가입 성공!');\n                    // alert('회원가입 성공!');\n                } else {\n                    // const errorText = await response.text();\n                    setErrorLabel(`🥑 회원가입 실패`);\n                    // alert(`회원가입 실패: ${errorText}`);\n                }\n            } catch (error) {\n                console.error('Error during registration:', error);\n                alert('회원가입 중 오류가 발생했습니다.');\n            }\n        } else {\n            alert('입력 정보를 확인해주세요.');\n        }\n    };\n\n    return (\n        <form className=\"SignupForm\" onSubmit={handleSubmit}>\n            <div className=\"Text32\" style={{marginBottom: '51px'}}>Sign Up</div>\n\n            <div className=\"SignUpProfilePickerContainer\">\n                <div className=\"SignUpProfileLabel\"><span>프로필 사진</span></div>\n                <div className=\"SignUpProfileImgPicker\">\n                    <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        id=\"profileImgInput\"\n                        onChange={handleFileChange}\n                        style={{display: 'none'}}\n                    />\n                    <label htmlFor=\"profileImgInput\" style={{\n                        width: '149px',\n                        height: '149px',\n                        borderRadius: '50%',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        backgroundColor: '#C4C4C4',\n                        cursor: 'pointer',\n                        position: 'relative',\n                        overflow: 'hidden'\n                    }}>\n                        {previewSrc ? (\n                            <img\n                                src={previewSrc}\n                                alt=\"Profile Preview\"\n                                style={{\n                                    width: '149px',\n                                    height: '149px',\n                                    borderRadius: '50%',\n                                    objectFit: 'cover',\n                                }}\n                            />\n                        ) : (\n                            <div style={{width: '24px', height: '24px', position: 'relative'}}>\n                                <div style={{\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    width: '1.2px',\n                                    height: '24px',\n                                    backgroundColor: 'black',\n                                    transform: 'translate(-50%, -50%)'\n                                }}></div>\n                                <div style={{\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    width: '24px',\n                                    height: '1.2px',\n                                    backgroundColor: 'black',\n                                    transform: 'translate(-50%, -50%)'\n                                }}></div>\n                            </div>\n                        )}\n                    </label>\n                    {uploadError && <div style={{color: 'red', marginTop: '10px'}}>{uploadError}</div>}\n                </div>\n            </div>\n\n            <EmailInputField\n                // label=\"이메일*\"\n                value={email}\n                onChange={handleEmailChange}\n                error={emailError}\n                labelStyle={{fontSize: '15px'}}\n            />\n            <PasswordInputField\n                // label=\"비밀번호*\"\n                value={password}\n                onChange={handlePasswordChange}\n                error={passwordError}\n                labelStyle={{fontSize: '15px'}}\n            />\n            <PasswordConfirmInputField\n                // label=\"비밀번호 확인*\"\n                value={confirmPassword}\n                onChange={handleConfirmPasswordChange}\n                error={confirmPasswordError}\n                labelStyle={{fontSize: '15px'}}\n            />\n            <NicknameInputField\n                // label=\"닉네임*\"\n                value={nickname}\n                onChange={handleNicknameChange}\n                error={nicknameError}\n                labelStyle={{fontSize: '15px'}}\n            />\n            <button className=\"SubmitBtn\">회원가입</button>\n            <div className=\"signUpTextContainer\"\n                 style={{display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '12px'}}>\n                <p style={{margin: 0, fontSize: '14px'}}>이미 계정이 있나요? </p>\n                <a href=\"/login\" className=\"Text14\" style={{marginLeft: '5px', fontWeight: '650'}}> 로그인하기</a>\n            </div>\n            <ToastMessage\n                successLabel={successLabel}\n                errorLabel={errorLabel}\n                clearLabels={clearLabels}\n            />\n        </form>\n    );\n};\n\nexport default SignUpForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}