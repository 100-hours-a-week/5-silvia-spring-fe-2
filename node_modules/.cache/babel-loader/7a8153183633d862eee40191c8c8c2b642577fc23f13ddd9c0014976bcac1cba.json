{"ast":null,"code":"var _jsxFileName = \"/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/components/InputField.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport HelperMessage from './HelperMessage';\nimport { FaUser } from \"react-icons/fa\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport { BiRename } from \"react-icons/bi\";\n\n// Common InputField component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = ({\n  type,\n  value,\n  onChange,\n  placeholder\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    value: value,\n    onChange: onChange,\n    placeholder: placeholder,\n    className: \"InputField\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = InputField;\nconst getFieldStyle = (error, helperText) => {\n  return {\n    marginBottom: error || helperText ? '0px' : '22px'\n  };\n};\nconst isValidEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\nconst createInputField = (type, defaultLabel, defaultPlaceholder, defaultHelperText, additionalValidation, IconComponent) => {\n  var _s = $RefreshSig$();\n  return _s(({\n    label = defaultLabel,\n    error,\n    labelStyle,\n    ...rest\n  }) => {\n    _s();\n    const [helperText, setHelperText] = useState(defaultHelperText);\n    useEffect(() => {\n      if (!rest.value) {\n        setHelperText(defaultHelperText);\n      } else if (additionalValidation) {\n        const validationMessage = additionalValidation(rest.value);\n        if (validationMessage) {\n          setHelperText(validationMessage);\n        } else {\n          setHelperText('');\n        }\n      } else {\n        setHelperText('');\n      }\n    }, [rest.value]);\n    const fieldStyle = getFieldStyle(error, helperText);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormInpuFormInputGrouptGroup\",\n      style: fieldStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Text18\",\n        style: labelStyle,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputWithIcon\",\n        children: [IconComponent && /*#__PURE__*/_jsxDEV(IconComponent, {\n          className: \"Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          type: type,\n          placeholder: defaultPlaceholder,\n          ...rest,\n          style: {\n            paddingLeft: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), (error || helperText) && /*#__PURE__*/_jsxDEV(HelperMessage, {\n        text: error || helperText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }, \"yEpGsb4g8FNN7TSAKDcM2bdhLjQ=\");\n};\n\n// Creating input field components\nconst EmailInputField = createInputField(\"email\", \"\", \"이메일을 입력하세요.\", \"*이메일을 입력해주세요.\", value => !isValidEmail(value) && \"*올바른 이메일 주소 형식을 입력해주세요\", FaUser);\nconst PasswordInputField = createInputField(\"password\", \"\", \"비밀번호를 입력하세요.\", \"*비밀번호를 입력해주세요.\", null, RiLockPasswordFill);\nconst PasswordConfirmInputField = createInputField(\"password\", \"\", \"비밀번호 확인을 입력하세요.\", \"*비밀번호 확인을 입력해주세요.\", null, RiLockPasswordFill);\nconst NicknameInputField = createInputField(\"text\", \"\", \"닉네임을 입력하세요.\", \"*닉네임을 입력해주세요.\", value => value.length > 10 ? \"*닉네임은 최대 10자까지 작성 가능합니다.\" : \"\", BiRename);\n\n// ProfileInputField component is created separately due to the file upload nature\nconst ProfileInputField = ({\n  profileImageError,\n  profileImagePreview,\n  handleProfileImageChange,\n  label = \"프로필 사진\",\n  labelStyle\n}) => {\n  _s2();\n  const [helperText, setHelperText] = useState('*프로필 사진을 추가해주세요.');\n  useEffect(() => {\n    if (profileImageError) {\n      setHelperText(profileImageError);\n    } else if (profileImagePreview) {\n      setHelperText('');\n    } else {\n      setHelperText('*프로필 사진을 추가해주세요.');\n    }\n  }, [profileImageError, profileImagePreview]);\n  const fieldStyle = getFieldStyle(profileImageError, helperText);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormInputGroup\",\n    style: fieldStyle,\n    children: [(profileImageError || helperText) && /*#__PURE__*/_jsxDEV(HelperMessage, {\n      text: profileImageError || helperText,\n      style: {\n        marginLeft: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-upload\",\n      id: \"upload-btn\",\n      style: {\n        backgroundImage: `url(${profileImagePreview})`\n      },\n      children: [!profileImagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cross-shape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        onChange: handleProfileImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s2(ProfileInputField, \"IJz/p93C6YJMH69moOaSqcGBcR0=\");\n_c2 = ProfileInputField;\nexport { EmailInputField, PasswordInputField, PasswordConfirmInputField, NicknameInputField, ProfileInputField };\nvar _c, _c2;\n$RefreshReg$(_c, \"InputField\");\n$RefreshReg$(_c2, \"ProfileInputField\");","map":{"version":3,"names":["React","useState","useEffect","HelperMessage","FaUser","RiLockPasswordFill","BiRename","jsxDEV","_jsxDEV","InputField","type","value","onChange","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","getFieldStyle","error","helperText","marginBottom","isValidEmail","email","emailRegex","test","createInputField","defaultLabel","defaultPlaceholder","defaultHelperText","additionalValidation","IconComponent","_s","$RefreshSig$","label","labelStyle","rest","setHelperText","validationMessage","fieldStyle","style","children","paddingLeft","text","EmailInputField","PasswordInputField","PasswordConfirmInputField","NicknameInputField","length","ProfileInputField","profileImageError","profileImagePreview","handleProfileImageChange","_s2","marginLeft","htmlFor","id","backgroundImage","_c2","$RefreshReg$"],"sources":["/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/components/InputField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HelperMessage from './HelperMessage';\nimport { FaUser } from \"react-icons/fa\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport { BiRename } from \"react-icons/bi\";\n\n// Common InputField component\nconst InputField = ({ type, value, onChange, placeholder }) => {\n    return (\n        <input\n            type={type}\n            value={value}\n            onChange={onChange}\n            placeholder={placeholder}\n            className=\"InputField\"\n        />\n    );\n};\n\nconst getFieldStyle = (error, helperText) => {\n    return { marginBottom: error || helperText ? '0px' : '22px' };\n};\n\nconst isValidEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n};\n\nconst createInputField = (type, defaultLabel, defaultPlaceholder, defaultHelperText, additionalValidation, IconComponent) => {\n    return ({ label = defaultLabel, error, labelStyle, ...rest }) => {\n        const [helperText, setHelperText] = useState(defaultHelperText);\n\n        useEffect(() => {\n            if (!rest.value) {\n                setHelperText(defaultHelperText);\n            } else if (additionalValidation) {\n                const validationMessage = additionalValidation(rest.value);\n                if (validationMessage) {\n                    setHelperText(validationMessage);\n                } else {\n                    setHelperText('');\n                }\n            } else {\n                setHelperText('');\n            }\n        }, [rest.value]);\n\n        const fieldStyle = getFieldStyle(error, helperText);\n\n        return (\n            <div className=\"FormInpuFormInputGrouptGroup\" style={fieldStyle}>\n                <div className=\"Text18\" style={labelStyle}>{label}</div>\n                <div className=\"InputWithIcon\">\n                    {IconComponent && <IconComponent className=\"Icon\" />}\n                    <InputField\n                        type={type}\n                        placeholder={defaultPlaceholder}\n                        {...rest}\n                        style={{ paddingLeft: '8px' }}\n                    />\n                </div>\n                {(error || helperText) && <HelperMessage text={error || helperText}/>}\n            </div>\n        );\n    };\n};\n\n// Creating input field components\nconst EmailInputField = createInputField(\"email\", \"\", \"이메일을 입력하세요.\", \"*이메일을 입력해주세요.\", (value) => !isValidEmail(value) && \"*올바른 이메일 주소 형식을 입력해주세요\", FaUser);\nconst PasswordInputField = createInputField(\"password\", \"\", \"비밀번호를 입력하세요.\",\"*비밀번호를 입력해주세요.\", null, RiLockPasswordFill);\nconst PasswordConfirmInputField = createInputField(\"password\", \"\", \"비밀번호 확인을 입력하세요.\",\"*비밀번호 확인을 입력해주세요.\", null, RiLockPasswordFill);\nconst NicknameInputField = createInputField(\"text\", \"\", \"닉네임을 입력하세요.\", \"*닉네임을 입력해주세요.\", (value) => value.length > 10 ? \"*닉네임은 최대 10자까지 작성 가능합니다.\" : \"\", BiRename);\n\n// ProfileInputField component is created separately due to the file upload nature\nconst ProfileInputField = ({ profileImageError, profileImagePreview, handleProfileImageChange, label = \"프로필 사진\", labelStyle }) => {\n    const [helperText, setHelperText] = useState('*프로필 사진을 추가해주세요.');\n\n    useEffect(() => {\n        if (profileImageError) {\n            setHelperText(profileImageError);\n        } else if (profileImagePreview) {\n            setHelperText('');\n        } else {\n            setHelperText('*프로필 사진을 추가해주세요.');\n        }\n    }, [profileImageError, profileImagePreview]);\n\n    const fieldStyle = getFieldStyle(profileImageError, helperText);\n\n    return (\n        <div className=\"FormInputGroup\" style={fieldStyle}>\n            {/*<div className=\"Text18\" style={labelStyle}>{label}</div>*/}\n            {(profileImageError || helperText) && <HelperMessage text={profileImageError || helperText} style={{marginLeft: '10px'}}/>}\n            <label htmlFor=\"file-upload\" id=\"upload-btn\" style={{ backgroundImage: `url(${profileImagePreview})` }}>\n                {!profileImagePreview && <div id=\"cross-shape\"></div>}\n                <input type=\"file\" id=\"file-upload\" onChange={handleProfileImageChange} />\n            </label>\n        </div>\n    );\n};\n\nexport { EmailInputField, PasswordInputField, PasswordConfirmInputField, NicknameInputField, ProfileInputField };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}