{"ast":null,"code":"var _jsxFileName = \"/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/components/PostCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport * as Buttons from '../components/Buttons';\nimport { SlCalender } from \"react-icons/sl\";\nimport { IoPersonOutline } from \"react-icons/io5\";\nimport { BiCommentDetail } from \"react-icons/bi\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport ToastMessage from './ToastMessage'; // Import the ToastMessage component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [successLabel, setSuccessLabel] = useState(''); // State for success toast label\n  const [errorLabel, setErrorLabel] = useState(''); // State for error toast label\n  const postsPerPage = 3;\n  const navigate = useNavigate();\n  const createClick = () => {\n    navigate('/post/create');\n    setSuccessLabel(\"새 게시글 작성 페이지로 이동했습니다.\");\n  };\n  const iconStyle = {\n    color: '#96A98B',\n    margin: '0px 10px 0px 25px',\n    fontSize: '14px'\n  };\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/posts');\n        const postsData = await response.json();\n        setPosts(postsData);\n        setFilteredPosts(postsData);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n        setErrorLabel('게시글을 가져오는 중 오류가 발생했습니다.');\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/accounts');\n        const usersData = await response.json();\n        setUsers(usersData.users);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        setErrorLabel('사용자 정보를 가져오는 중 오류가 발생했습니다.');\n      }\n    };\n    const fetchComments = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/comments');\n        const commentsData = await response.json();\n        setComments(commentsData.users);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n        setErrorLabel('댓글을 가져오는 중 오류가 발생했습니다.');\n      }\n    };\n    fetchPosts();\n    fetchUsers();\n    fetchComments();\n  }, []);\n  useEffect(() => {\n    const filtered = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredPosts(filtered);\n    setCurrentPage(1);\n  }, [searchTerm, posts]);\n  const navigateToPost = postId => {\n    navigate(`/post/${postId}`);\n  };\n  const truncateContent = (content, length) => {\n    if (!content) return '';\n    if (content.length <= length) {\n      return content;\n    }\n    return content.substring(0, length) + '...';\n  };\n  const handleShare = postId => {\n    const postUrl = `${window.location.origin}/post/${postId}`;\n    navigator.clipboard.writeText(postUrl).then(() => {\n      setSuccessLabel('🥑 게시글 주소가 복사되었습니다.');\n    }).catch(err => {\n      console.error('Error copying to clipboard', err);\n      setErrorLabel('게시글 주소 복사 중 오류가 발생했습니다.');\n    });\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => Math.max(prevPage - 1, 1));\n  };\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => {\n      const maxPage = Math.ceil(filteredPosts.length / postsPerPage);\n      return Math.min(prevPage + 1, maxPage);\n    });\n  };\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n  const clearLabels = () => {\n    setSuccessLabel('');\n    setErrorLabel('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchContainer\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Buttons.CreateBtn, {\n        label: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n        onClick: createClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostCardsContainer\",\n      children: currentPosts.map(post => {\n        const {\n          id,\n          user_id,\n          title,\n          article,\n          post_picture,\n          likes,\n          create_dt\n        } = post;\n        const formattedDate = create_dt.split('T')[0];\n        const author = users.find(user => user.user_id === user_id);\n        const authorName = author ? author.nickname : 'Unknown';\n        const postComments = comments.filter(comment => comment.post_id === id.toString());\n        const commentCount = postComments.length;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PostCard\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postCardContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postCardImgPreviewContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postCardImgPreview\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: post_picture,\n                  alt: \"CardPreview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postCardDetails\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"PostCardMeta\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"postCardMetaContent\",\n                  children: [/*#__PURE__*/_jsxDEV(SlCalender, {\n                    style: iconStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: formattedDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(IoPersonOutline, {\n                    style: iconStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: authorName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(BiCommentDetail, {\n                    style: iconStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: commentCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FaRegHeart, {\n                    style: iconStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: likes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"PostCardTopArea\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"postCardContentPreview\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: truncateContent(article, 80)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"postCardBottomArea\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"navigateButton\",\n                  onClick: () => navigateToPost(id),\n                  children: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"postCardShareBtn\",\n                  onClick: () => handleShare(id),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"https://lh3.google.com/u/0/d/1GqffKqgSitn0exrg2f_3D1EV55dUq4AP=w2612-h1714-iv1\",\n                    alt: \"Share\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevPage,\n        disabled: currentPage === 1,\n        className: \"arrowButton\",\n        children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dots\",\n        children: Array.from({\n          length: Math.ceil(filteredPosts.length / postsPerPage)\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `dot ${currentPage === index + 1 ? 'active' : ''}`,\n          onClick: () => setCurrentPage(index + 1)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === Math.ceil(filteredPosts.length / postsPerPage),\n        className: \"arrowButton\",\n        children: /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastMessage, {\n      successLabel: successLabel,\n      errorLabel: errorLabel,\n      clearLabels: clearLabels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCard, \"6Fo24Te1tBR3BTN6RBYOLEpigBg=\", false, function () {\n  return [useNavigate];\n});\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","SearchBar","Buttons","SlCalender","IoPersonOutline","BiCommentDetail","FaRegHeart","FaArrowLeft","FaArrowRight","ToastMessage","jsxDEV","_jsxDEV","PostCard","_s","posts","setPosts","filteredPosts","setFilteredPosts","users","setUsers","comments","setComments","searchTerm","setSearchTerm","currentPage","setCurrentPage","successLabel","setSuccessLabel","errorLabel","setErrorLabel","postsPerPage","navigate","createClick","iconStyle","color","margin","fontSize","fetchPosts","response","fetch","postsData","json","error","console","fetchUsers","usersData","fetchComments","commentsData","filtered","filter","post","title","toLowerCase","includes","navigateToPost","postId","truncateContent","content","length","substring","handleShare","postUrl","window","location","origin","navigator","clipboard","writeText","then","catch","err","handlePrevPage","prevPage","Math","max","handleNextPage","maxPage","ceil","min","indexOfLastPost","indexOfFirstPost","currentPosts","slice","clearLabels","children","className","fileName","_jsxFileName","lineNumber","columnNumber","CreateBtn","label","onClick","map","id","user_id","article","post_picture","likes","create_dt","formattedDate","split","author","find","user","authorName","nickname","postComments","comment","post_id","toString","commentCount","src","alt","style","disabled","Array","from","_","index","_c","$RefreshReg$"],"sources":["/Users/moolmin/Documents/GitHub/5-silvia-spring-fe/src/components/PostCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport * as Buttons from '../components/Buttons';\nimport { SlCalender } from \"react-icons/sl\";\nimport { IoPersonOutline } from \"react-icons/io5\";\nimport { BiCommentDetail } from \"react-icons/bi\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport ToastMessage from './ToastMessage'; // Import the ToastMessage component\n\nconst PostCard = () => {\n    const [posts, setPosts] = useState([]);\n    const [filteredPosts, setFilteredPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [comments, setComments] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [successLabel, setSuccessLabel] = useState(''); // State for success toast label\n    const [errorLabel, setErrorLabel] = useState(''); // State for error toast label\n    const postsPerPage = 3;\n\n    const navigate = useNavigate();\n    const createClick = () => {\n        navigate('/post/create');\n        setSuccessLabel(\"새 게시글 작성 페이지로 이동했습니다.\");\n    };\n\n    const iconStyle = {\n        color: '#96A98B',\n        margin: '0px 10px 0px 25px',\n        fontSize: '14px',\n    };\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const response = await fetch('http://localhost:3001/api/posts');\n                const postsData = await response.json();\n                setPosts(postsData);\n                setFilteredPosts(postsData);\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n                setErrorLabel('게시글을 가져오는 중 오류가 발생했습니다.');\n            }\n        };\n\n        const fetchUsers = async () => {\n            try {\n                const response = await fetch('http://localhost:3001/api/accounts');\n                const usersData = await response.json();\n                setUsers(usersData.users);\n            } catch (error) {\n                console.error('Error fetching users:', error);\n                setErrorLabel('사용자 정보를 가져오는 중 오류가 발생했습니다.');\n            }\n        };\n\n        const fetchComments = async () => {\n            try {\n                const response = await fetch('http://localhost:3001/api/comments');\n                const commentsData = await response.json();\n                setComments(commentsData.users);\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n                setErrorLabel('댓글을 가져오는 중 오류가 발생했습니다.');\n            }\n        };\n        fetchPosts();\n        fetchUsers();\n        fetchComments();\n    }, []);\n\n    useEffect(() => {\n        const filtered = posts.filter(post =>\n            post.title.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n        setFilteredPosts(filtered);\n        setCurrentPage(1);\n    }, [searchTerm, posts]);\n\n    const navigateToPost = (postId) => {\n        navigate(`/post/${postId}`);\n    };\n\n    const truncateContent = (content, length) => {\n        if (!content) return '';\n        if (content.length <= length) {\n            return content;\n        }\n        return content.substring(0, length) + '...';\n    };\n\n    const handleShare = (postId) => {\n        const postUrl = `${window.location.origin}/post/${postId}`;\n        navigator.clipboard.writeText(postUrl).then(() => {\n            setSuccessLabel('🥑 게시글 주소가 복사되었습니다.');\n        }).catch(err => {\n            console.error('Error copying to clipboard', err);\n            setErrorLabel('게시글 주소 복사 중 오류가 발생했습니다.');\n        });\n    };\n\n    const handlePrevPage = () => {\n        setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\n    };\n\n    const handleNextPage = () => {\n        setCurrentPage((prevPage) => {\n            const maxPage = Math.ceil(filteredPosts.length / postsPerPage);\n            return Math.min(prevPage + 1, maxPage);\n        });\n    };\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n\n    const clearLabels = () => {\n        setSuccessLabel('');\n        setErrorLabel('');\n    };\n\n    return (\n        <div>\n            <div className=\"SearchContainer\">\n                <SearchBar searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n                <Buttons.CreateBtn\n                    label=\"게시글 작성\"\n                    onClick={createClick}\n                />\n            </div>\n            <div className=\"PostCardsContainer\">\n                {currentPosts.map((post) => {\n                    const { id, user_id, title, article, post_picture, likes, create_dt } = post;\n                    const formattedDate = create_dt.split('T')[0];\n\n                    const author = users.find(user => user.user_id === user_id);\n                    const authorName = author ? author.nickname : 'Unknown';\n\n                    const postComments = comments.filter(comment => comment.post_id === id.toString());\n                    const commentCount = postComments.length;\n\n                    return (\n                        <div key={id} className=\"PostCard\">\n                            <div className=\"postCardContent\">\n                                <div className=\"postCardImgPreviewContainer\">\n                                    <div className=\"postCardImgPreview\">\n                                        <img src={post_picture} alt=\"CardPreview\"/>\n                                    </div>\n                                </div>\n                                <div className=\"postCardDetails\">\n                                    <div className=\"PostCardMeta\">\n                                        <div className=\"postCardMetaContent\">\n                                            <SlCalender style={iconStyle}/>\n                                            <p>{formattedDate}</p>\n                                            <IoPersonOutline style={iconStyle}/>\n                                            <p>{authorName}</p>\n                                            <BiCommentDetail style={iconStyle}/>\n                                            <p>{commentCount}</p>\n                                            <FaRegHeart style={iconStyle}/>\n                                            <p>{likes}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"PostCardTopArea\">\n                                        <p>{title}</p>\n                                        <div className=\"postCardContentPreview\">\n                                            <p>{truncateContent(article, 80)}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"postCardBottomArea\">\n                                        <div\n                                            className=\"navigateButton\"\n                                            onClick={() => navigateToPost(id)}\n                                        >\n                                            자세히 보기\n                                        </div>\n                                        <div className=\"postCardShareBtn\" onClick={() => handleShare(id)}>\n                                            <img src='https://lh3.google.com/u/0/d/1GqffKqgSitn0exrg2f_3D1EV55dUq4AP=w2612-h1714-iv1' alt='Share'/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n            <div className=\"Pagination\">\n                <button onClick={handlePrevPage} disabled={currentPage === 1} className=\"arrowButton\">\n                    <FaArrowLeft />\n                </button>\n                <div className=\"dots\">\n                    {Array.from({ length: Math.ceil(filteredPosts.length / postsPerPage) }, (_, index) => (\n                        <span\n                            key={index}\n                            className={`dot ${currentPage === index + 1 ? 'active' : ''}`}\n                            onClick={() => setCurrentPage(index + 1)}\n                        />\n                    ))}\n                </div>\n                <button onClick={handleNextPage} disabled={currentPage === Math.ceil(filteredPosts.length / postsPerPage)} className=\"arrowButton\">\n                    <FaArrowRight />\n                </button>\n            </div>\n            <ToastMessage successLabel={successLabel} errorLabel={errorLabel} clearLabels={clearLabels} /> {/* Use the ToastMessage component */}\n        </div>\n    );\n};\n\nexport default PostCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}