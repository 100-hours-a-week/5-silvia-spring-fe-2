{"version":3,"file":"react-animated-pagination.cjs.development.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/Navigation.tsx","../src/PaginationAnimated.tsx","../src/PaginationSwipeable.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from 'react';\r\n\r\nimport './navigation.css';\r\n\r\n/**\r\n * A set of types for creating custom Navigation components\r\n * \r\n */\r\nexport type NavigationTypes = {\r\n    /**\r\n     * @param handlePageChange Handles changing the current visible page according to the provided index\r\n     * \r\n     * @example\r\n     * ```\r\n     * <button\r\n     *   handlePageChange(currentPage + 1)\r\n     * >\r\n     *   Next page\r\n     * </button>\r\n     * ```\r\n     */\r\n    handlePageChange: (arg0: number) => void,\r\n    /**\r\n     * @param currentPage The item in the pages array currently displayed in the pagination\r\n     * \r\n     * @example\r\n     * ```\r\n     * <button\r\n     *   handlePageChange(currentPage + 1)\r\n     * >\r\n     *   Next page\r\n     * </button>\r\n     * ```\r\n     */\r\n    currentPage: number,\r\n    /**\r\n     * @param pages The array of pages generated from the items passed to the Pagination component\r\n     * \r\n     * @example\r\n     * ```\r\n     * pages.map((_page: any, index: any) => (\r\n     *   <button\r\n     *     onClick={() => handlePageChange(index)}\r\n     *   >\r\n     *     {index + 1}\r\n     *   </button>\r\n     * ))\r\n     * ```\r\n     */\r\n    pages: [][],\r\n    /**\r\n     * @param infiniteFlip Is the infiniteFlip allowed (on PaginationSwipeable component)\r\n     * \r\n     * @example \r\n     * ```\r\n     * if (!pages[currentPage - 1] && infiniteFlip) {\r\n     *   handlePageChange(pages.length - 1);\r\n     * }\r\n     * ```\r\n     */\r\n    infiniteFlip? : boolean,\r\n    /**\r\n     * @param getContainerRef Returns a reference to the pagination container <div> element\r\n     * \r\n     * @example\r\n     * ```\r\n     * let containerRef = getContainerRef();\r\n     * containerRef.addEventListener(...)\r\n     * ```\r\n     */\r\n    getContainerRef?: () => HTMLDivElement,\r\n    /**\r\n     * @param getCurrentPageRef Returns a reference to the current page <div> element\r\n     * \r\n     * @example\r\n     * ```\r\n     * let currentPageRef = getCurrentPageRef();\r\n     * currentPageRef.addEventListener(...)\r\n     * ```\r\n     */\r\n    getCurrentPageRef?: () => HTMLDivElement\r\n}\r\n\r\nexport const Navigation: React.FC<NavigationTypes> = ({ \r\n    handlePageChange,\r\n    currentPage,\r\n    pages,\r\n    infiniteFlip\r\n}) => {\r\n  return (\r\n    <div className=\"paginationControls\">\r\n    <button\r\n      className=\"paginationControls__arrowBtn\"\r\n      onClick={() => handlePageChange(0)}\r\n      disabled={ currentPage === 0 ? true : false }\r\n      aria-label=\"First page\"\r\n    >\r\n      <svg\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 16 16\"\r\n        className=\"bi bi-chevron-double-left\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\r\n        />\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\r\n        />\r\n      </svg>\r\n    </button>\r\n    <button\r\n      className=\"paginationControls__arrowBtn\"\r\n      onClick={() => {\r\n        if (pages[currentPage - 1]) {\r\n          handlePageChange(currentPage - 1)\r\n        } else if (!pages[currentPage - 1] && infiniteFlip) {\r\n          handlePageChange(pages.length - 1)\r\n        }\r\n      }}\r\n      disabled={ infiniteFlip !== undefined && infiniteFlip === true ? false : (currentPage === 0 ? true : false)}\r\n      aria-label=\"Previous page\"\r\n    >\r\n      <svg\r\n        className=\"bi bi-chevron-left\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M13.354 3.646a.5.5 0 010 .708L7.707 10l5.647 5.646a.5.5 0 01-.708.708l-6-6a.5.5 0 010-.708l6-6a.5.5 0 01.708 0z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    </button>\r\n    {pages &&\r\n      pages.map((_page: any, index: any) => (\r\n        <button\r\n          className={`paginationContols__pageNoBtn\r\n                  ${\r\n                    index === currentPage\r\n                      ? \"paginationContols__pageNoBtn--active\"\r\n                      : \"\"\r\n                  }\r\n                  ${\r\n                    pages.length > 10 &&\r\n                    index !== 0 &&\r\n                    index !== pages.length - 1 &&\r\n                    (currentPage > index\r\n                      ? currentPage - index > 3\r\n                      : index - currentPage > 3)\r\n                      ? \"paginationContols__pageNoBtn--hidden\"\r\n                      : \"\"\r\n                  }\r\n                  ${\r\n                    pages.length > 10 &&\r\n                    index !== 0 &&\r\n                    index !== pages.length - 1 &&\r\n                    currentPage > index &&\r\n                    currentPage - index === 3\r\n                      ? \"paginationContols__pageNoBtn--dotsBefore\"\r\n                      : \"\"\r\n                  }\r\n                  ${\r\n                    pages.length > 10 &&\r\n                    index !== 0 &&\r\n                    index !== pages.length - 1 &&\r\n                    index > currentPage &&\r\n                    index - currentPage === 3\r\n                      ? \"paginationContols__pageNoBtn--dotsAfter\"\r\n                      : \"\"\r\n                  }\r\n                  `}\r\n          key={index}\r\n          onClick={() => handlePageChange(index)}\r\n          disabled={index === currentPage}\r\n          aria-label={`Page number ${index + 1}`}\r\n        >\r\n          {index + 1}\r\n        </button>\r\n      ))}\r\n    <button\r\n      className=\"paginationControls__arrowBtn\"\r\n      onClick={() => {\r\n        if (pages[currentPage + 1]) {\r\n          handlePageChange(currentPage + 1)\r\n        } else if (!pages[currentPage + 1] && infiniteFlip) {\r\n          handlePageChange(0)\r\n        }\r\n      }}\r\n      disabled={infiniteFlip ? false : (currentPage === pages.length - 1 ? true : false)}\r\n      aria-label=\"Next page\"\r\n    >\r\n      <svg\r\n        className=\"bi bi-chevron-right\"\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M6.646 3.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L12.293 10 6.646 4.354a.5.5 0 010-.708z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    </button>\r\n    <button\r\n      className=\"paginationControls__arrowBtn\"\r\n      onClick={() => handlePageChange(pages.length - 1)}\r\n      disabled={currentPage === pages.length -1 ? true : false }\r\n      aria-label=\"Last page\"\r\n    >\r\n      <svg\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 16 16\"\r\n        className=\"bi bi-chevron-double-right\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708z\"\r\n        />\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708z\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n  )\r\n};\r\n","import * as React from 'react';\r\nimport { Navigation } from './Navigation';\r\n\r\nimport './pagination.css';\r\n\r\nexport type PaginationAnimatedTypes = {\r\n  /** \r\n   * @param items An array of JavaScript Objects to be paginated\r\n   * \r\n   * @example items={fetchedArray}\r\n   * */\r\n  items: Array<any>,\r\n  /**\r\n   * @param itemsOnPage A number of items on each page, defaults to 5 \r\n   * \r\n   * @example itemsOnPage={10}\r\n  */\r\n    itemsOnPage?: number,\r\n  /** \r\n   * @param topNav To show top navigation or not\r\n   * \r\n   * If neither @param bottomNav nor @param topNav are specified, defaults to showing top navigation\r\n   * \r\n   * @example topNav={true}\r\n   */\r\n    topNav?: boolean,\r\n  /** \r\n   * @param bottomNav To show bottom navigation or not\r\n   * \r\n   * If neither @param bottomNav nor @param topNav are specified, defaults to showing top navigation\r\n   * \r\n   * @example bottomNav={true}\r\n   */\r\n    bottomNav?: boolean,\r\n  /** \r\n   * @param entryProp The prop to be cloned during the iteration process\r\n   * \r\n   * @example \r\n   * \r\n   * ```\r\n   * const MyComponent = ({ component }) => {...}\r\n   * \r\n   * ...\r\n   * \r\n   * <PaginationAnimated\r\n   *   entryProp=\"component\"\r\n   *   children={<MyComponent />}\r\n   *   ...\r\n   * />\r\n   * ```\r\n   */\r\n    entryProp: string,\r\n   /**\r\n   * @param iterationKey The key for the iteration to tell React which field of the Object to use as key prop during the iteration. \r\n   * \r\n   * Defaults to \"id\", fallbacks to the item's index (**warning**: indices are not reliable iteration keys)\r\n   * \r\n   * @example iterationKey=\"_id\"\r\n   */    \r\n    iterationKey?: string,\r\n   /**\r\n   * @param customNavigation Custom Navigation component to use instead of the built-in one.\r\n   * \r\n   * @example \r\n   * ```\r\n   * import MyNavigation from \"./MyNavigation.js\";\r\n   * ...\r\n   * customNavigation={MyNavigation}\r\n   * ```\r\n   */\r\n    customNavigation?: any,\r\n   /**\r\n   * @param customNextAnimation The CSS transition animation to the next page.\r\n   * \r\n   * **Note**: animation should be in the Parent's scope to run correctly.\r\n   * \r\n   * @example \r\n   * ```\r\n   * import \"./myAnimations.css\";\r\n   * ...\r\n   * customNextAnimation=\"myNextAnimation 1s forwards\"\r\n   * ```\r\n   */\r\n    customNextAnimation? : string,\r\n   /**\r\n   * @param customPrevAnimation The CSS transition animation to the previous page.\r\n   * \r\n   * **Note**: animation should be in the Parent's scope to run correctly.\r\n   * \r\n   * @example \r\n   * ```\r\n   * import \"./myAnimations.css\";\r\n   * ...\r\n   * customPrevAnimation=\"myPrevAnimation 1s forwards\"\r\n   * ```\r\n   */\r\n    customPrevAnimation? : string,\r\n  /**\r\n   * @param delay The delay of switching the pages in milliseconds.\r\n   * \r\n   * Can be used to achieve smoother custom animation effects.\r\n   * \r\n   * @example delay={300}\r\n   */\r\n    delay?: number,\r\n  /**\r\n   * @param children The React Component to be rendered in the pagination, all the props except for the @param entryProp can be directly passed here. \r\n   * \r\n   * @example \r\n   * \r\n   * ```\r\n   * const MyComponent = ({ component }) => {...}\r\n   * \r\n   * ...\r\n   * \r\n   * <PaginationAnimated\r\n   *   entryProp=\"component\"\r\n   *   children={<MyComponent />}\r\n   *   ...\r\n   * />\r\n   * ```\r\n   */\r\n    children: React.ReactElement\r\n}\r\n\r\n\r\n/**\r\n * Pagination component with customizable transition animations\r\n * \r\n * @example \r\n * ```\r\n * <PaginationAnimated\r\n *   bottomNav={true}\r\n *   topNav={true}\r\n *   itemsOnPage={5}\r\n *   customNavigation={CustomNavigation}\r\n *   customNextAnimation={'nextPageCustom .7s forwards'}\r\n *   customPrevAnimation={'prevPageCustom .7s forwards'}\r\n *   delay={300}\r\n *   items={arrayOfObjects}\r\n *   entryProp=\"component\"\r\n *   iterationKey=\"_id\"\r\n *   children={\r\n *     <MyComponent \r\n *       handleDelete={handleDelete} \r\n *       handleEdit={handleEdit} \r\n *       commonState={commonState}\r\n *     />}\r\n * />\r\n * ```\r\n */\r\nexport const PaginationAnimated: React.FC<PaginationAnimatedTypes> = ({\r\n    items,\r\n    itemsOnPage,\r\n    topNav,\r\n    bottomNav,\r\n    entryProp,\r\n    iterationKey,\r\n    customNavigation,\r\n    customNextAnimation,\r\n    customPrevAnimation,\r\n    delay,\r\n    children\r\n  }) => {    \r\n    let containerRef = React.useRef<HTMLDivElement>(null);\r\n    \r\n    const [currentPage, setCurrentPage] = React.useState(0);\r\n    const [pages, setPages] = React.useState<Array<any>>([]);\r\n\r\n    const CustomNavigation = customNavigation;\r\n  \r\n    let currentPageRef = React.useRef<HTMLDivElement>(null);\r\n  \r\n    const handlePageChange = (pageNo: number) => {\r\n\r\n      if (currentPageRef.current !== null) {     \r\n      \r\n          if (currentPage > pageNo) {\r\n            currentPageRef.current.style.animation = customPrevAnimation ? customPrevAnimation : \"prevPage .5s forwards\";\r\n          } else {\r\n            currentPageRef.current.style.animation = customNextAnimation ? customNextAnimation : \"nextPage .5s forwards\";\r\n          }\r\n\r\n          setTimeout(() => {\r\n            setCurrentPage(pageNo);\r\n          }, delay ? delay : 0) \r\n      }\r\n    };\r\n  \r\n    React.useEffect(() => {\r\n      let itemsPerPage = itemsOnPage ? itemsOnPage : 5;\r\n      let workingPages: Array<any>[] = [];\r\n      let workingPagesCurrentIndex = 0;\r\n  \r\n      if (items) {\r\n        items.forEach((item) => {\r\n          if (\r\n            workingPages[workingPagesCurrentIndex] &&\r\n            workingPages[workingPagesCurrentIndex].length >= itemsPerPage\r\n          )\r\n            workingPagesCurrentIndex++;\r\n  \r\n          if (workingPages[workingPagesCurrentIndex] === undefined)\r\n            workingPages[workingPagesCurrentIndex] = [];\r\n  \r\n          workingPages[workingPagesCurrentIndex].push(item);\r\n        });\r\n      }\r\n  \r\n      setPages([...workingPages]);\r\n    }, [items, itemsOnPage, setPages]);\r\n  \r\n    React.useEffect(() => {\r\n      if (!pages[currentPage]) {\r\n        setCurrentPage(currentPage - 1 > -1 ? currentPage - 1 : 0);\r\n      }\r\n    }, [currentPage, pages]);\r\n  \r\n    React.useEffect(() => {\r\n      setCurrentPage(0);\r\n    }, []);\r\n  \r\n    return (\r\n      <div className=\"pagination__paginationContainer\">\r\n        {\r\n        topNav || (!bottomNav && !topNav) \r\n        ? \r\n        (\r\n            CustomNavigation\r\n            ?\r\n            <CustomNavigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n                getContainerRef={() => containerRef.current}\r\n            />\r\n            :\r\n            <Navigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n            />\r\n        )\r\n        : \r\n        null\r\n        }\r\n        <div\r\n          ref={currentPageRef}\r\n          className={`paginationContainer__currentPageDiv`}\r\n          onAnimationEnd={() => {\r\n            if (currentPageRef.current) {\r\n              currentPageRef.current.style.animation = \"\"\r\n            }\r\n         }}\r\n        >\r\n          {pages.length &&\r\n            pages[currentPage] &&\r\n            pages[currentPage].map((item: any, index: number) => {\r\n              let objectToClone: any = {};\r\n              objectToClone[entryProp] = item;\r\n              return (\r\n                <React.Fragment key={iterationKey ? item[iterationKey] : (item.id ? item.id : index) }>\r\n                  {React.cloneElement(children, objectToClone)}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </div>\r\n        {\r\n        bottomNav\r\n        ? \r\n        (\r\n            CustomNavigation\r\n            ?\r\n            <CustomNavigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n                getContainerRef={() => containerRef.current}\r\n            />\r\n            :\r\n            <Navigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n            />\r\n        )\r\n        : \r\n        null\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n","import * as React from 'react';\r\nimport { Navigation } from './Navigation';\r\n\r\nimport './pagination.css';\r\n\r\nexport type PaginationSwipeableTypes = {\r\n  /** \r\n   * @param items An array of JavaScript Objects to be paginated\r\n   * \r\n   * @example items={fetchedArray}\r\n   * */\r\n    items: Array<any>,\r\n  /**\r\n   * @param itemsOnPage A number of items on each page, defaults to 5 \r\n   * \r\n   * @example itemsOnPage={10}\r\n  */\r\n    itemsOnPage?: number,\r\n  /** \r\n   * @param topNav To show top navigation or not\r\n   * \r\n   * If neither @param bottomNav nor @param topNav are specified, defaults to showing top navigation\r\n   * \r\n   * @example topNav={true}\r\n   */\r\n    topNav?: boolean,\r\n  /** \r\n   * @param bottomNav To show bottom navigation or not\r\n   * \r\n   * If neither @param bottomNav nor @param topNav are specified, defaults to showing top navigation\r\n   * \r\n   * @example bottomNav={true}\r\n   */\r\n    bottomNav?: boolean,\r\n  /** \r\n   * @param infiniteFlip Allow infinite flipping of the pages (only on PaginationSwipeable)\r\n   * \r\n   * @example infiniteFlip={true}\r\n   */ \r\n    infiniteFlip?: boolean,\r\n  /** \r\n   * @param entryProp The prop to be cloned during the iteration process\r\n   * \r\n   * @example \r\n   * \r\n   * ```\r\n   * const MyComponent = ({ component }) => {...}\r\n   * \r\n   * ...\r\n   * \r\n   * <PaginationSwipeable\r\n   *   entryProp=\"component\"\r\n   *   children={<MyComponent />}\r\n   *   ...\r\n   * />\r\n   * ```\r\n   */\r\n    entryProp: string,\r\n   /**\r\n   * @param iterationKey The key for the iteration to tell React which field of the Object to use as key prop during the iteration. \r\n   * \r\n   * Defaults to \"id\", fallbacks to the item's index (**warning**: indices are not reliable iteration keys)\r\n   * \r\n   * @example iterationKey=\"_id\"\r\n   */    \r\n    iterationKey?: string,\r\n   /**\r\n   * @param customNavigation Custom Navigation component to use instead of the built-in one.\r\n   * \r\n   * @example \r\n   * ```\r\n   * import MyNavigation from \"./MyNavigation.js\";\r\n   * ...\r\n   * customNavigation={MyNavigation}\r\n   * ```\r\n   */\r\n    customNavigation?: any,\r\n   /**\r\n   * @param customNextAnimation The CSS transition animation to the next page.\r\n   * \r\n   * **Note**: animation should be in the Parent's scope to run correctly.\r\n   * \r\n   * @example \r\n   * ```\r\n   * import \"./myAnimations.css\";\r\n   * ...\r\n   * customNextAnimation=\"myNextAnimation 1s forwards\"\r\n   * ```\r\n   */\r\n    customNextAnimation? : string,\r\n   /**\r\n   * @param customPrevAnimation The CSS transition animation to the previous page.\r\n   * \r\n   * **Note**: animation should be in the Parent's scope to run correctly.\r\n   * \r\n   * @example \r\n   * ```\r\n   * import \"./myAnimations.css\";\r\n   * ...\r\n   * customPrevAnimation=\"myPrevAnimation 1s forwards\"\r\n   * ```\r\n   */\r\n    customPrevAnimation? : string,\r\n  /**\r\n   * @param delay The delay of switching the pages in milliseconds.\r\n   * \r\n   * Can be used to achieve smoother custom animation effects.\r\n   * \r\n   * @example delay={300}\r\n   */\r\n    delay?: number,\r\n  \r\n  /**\r\n   * @param touchSensitivity A number representing touch sensititvity: from which point to start dragging the page, at which point to run changing to the next/previous page\r\n   * \r\n   * Defaults to 30\r\n   * \r\n   * @example touchSensitivity={10}\r\n   */\r\n    touchSensitivity?: number,\r\n  /**\r\n   * @param children The React Component to be rendered in the pagination, all the props except for the @param entryProp can be directly passed here. \r\n   * \r\n   * @example \r\n   * \r\n   * ```\r\n   * const MyComponent = ({ component }) => {...}\r\n   * \r\n   * ...\r\n   * \r\n   * <PaginationSwipeable\r\n   *   entryProp=\"component\"\r\n   *   children={<MyComponent />}\r\n   *   ...\r\n   * />\r\n   * ```\r\n   */\r\n    children: React.ReactElement\r\n}\r\n\r\n\r\n/**\r\n * Pagination component with swipe support on touch screens\r\n * \r\n * @example \r\n * ```\r\n * <PaginationSwipeable\r\n *   infiniteFlip={true}\r\n *   bottomNav={true}\r\n *   topNav={true}\r\n *   itemsOnPage={5}\r\n *   customNavigation={CustomNavigation}\r\n *   customNextAnimation={'nextPageCustom .7s forwards'}\r\n *   customPrevAnimation={'prevPageCustom .7s forwards'}\r\n *   delay={300}\r\n *   touchSensitivity={10}\r\n *   items={arrayOfObjects}\r\n *   entryProp=\"component\"\r\n *   iterationKey=\"_id\"\r\n *   children={\r\n *     <MyComponent \r\n *       handleDelete={handleDelete} \r\n *       handleEdit={handleEdit} \r\n *       commonState={commonState}\r\n *     />}\r\n * />\r\n * ```\r\n */\r\nexport const PaginationSwipeable: React.FC<PaginationSwipeableTypes> = ({\r\n    items,\r\n    itemsOnPage,\r\n    topNav,\r\n    bottomNav,\r\n    infiniteFlip,\r\n    entryProp,\r\n    iterationKey,\r\n    customNavigation,\r\n    customNextAnimation,\r\n    customPrevAnimation,\r\n    delay,\r\n    touchSensitivity,\r\n    children\r\n  }) => {\r\n    let _touchSensitivity = touchSensitivity ? touchSensitivity : 30\r\n    const [currentPage, setCurrentPage] = React.useState(0);\r\n    const [pages, setPages] = React.useState<Array<any>>([]);\r\n\r\n    const CustomNavigation = customNavigation;\r\n  \r\n    let currentPageRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    let containerRef = React.useRef<HTMLDivElement>(null);\r\n  \r\n    // Touch\r\n    const [isDragging, setIsDragging] = React.useState(false);\r\n    const [initialTouch, setInitialTouch] = React.useState(0);\r\n    const [posLeft, setPosLeft] = React.useState(0);\r\n    const [prevLeft, setPrevLeft] = React.useState(0);\r\n  \r\n    const divStyle: React.CSSProperties = {\r\n      position: isDragging ? \"relative\" : \"static\",\r\n      left: isDragging ? posLeft : 0,\r\n      overflowX: \"hidden\"\r\n    };\r\n  \r\n    const _onTouchStart = (event: any) => {\r\n      setIsDragging(true);\r\n      extractPositionDelta(event.nativeEvent.touches[0]);\r\n      setInitialTouch(event.nativeEvent.touches[0].clientX);\r\n  \r\n      // these four lines added later\r\n      const { left } = extractPositionDelta(event.nativeEvent.touches[0]);\r\n  \r\n      if (posLeft + left <= 0) {\r\n        setPosLeft(posLeft + left);\r\n      }\r\n    };\r\n  \r\n    const _onTouchMove = (event: any) => {\r\n      if (!isDragging) {\r\n        return;\r\n      }\r\n      const { left } = extractPositionDelta(event.nativeEvent.touches[0]);\r\n  \r\n      if (Math.abs(posLeft) + Math.abs(left) > _touchSensitivity) {\r\n        setPosLeft(posLeft + left);\r\n      }\r\n    };\r\n  \r\n    const _onTouchEnd = (_event: any) => {\r\n      let delta = Math.abs(prevLeft) - Math.abs(posLeft);\r\n  \r\n      if (delta < -_touchSensitivity && posLeft < initialTouch) {\r\n        if (pages[currentPage + 1]) {\r\n          handlePageChange(currentPage + 1)\r\n        } else if (!pages[currentPage + 1] && infiniteFlip) {\r\n          handlePageChange(0)\r\n        } else {\r\n          setPosLeft(0);\r\n          setPrevLeft(0);\r\n          setInitialTouch(0);\r\n          setIsDragging(false);\r\n        }\r\n      } else if (delta > _touchSensitivity && posLeft > initialTouch) {\r\n        if (pages[currentPage - 1]) {\r\n          handlePageChange(currentPage - 1)\r\n        } else if (!pages[currentPage - 1] && infiniteFlip) {\r\n          handlePageChange(pages.length - 1)\r\n        } else {\r\n          setPosLeft(0);\r\n          setPrevLeft(0);\r\n          setInitialTouch(0);\r\n          setIsDragging(false);\r\n        }\r\n      } else {\r\n        setPosLeft(0);\r\n        setPrevLeft(0);\r\n        setInitialTouch(0);\r\n        setIsDragging(false);\r\n      }\r\n  \r\n    };\r\n  \r\n    const extractPositionDelta = (event: any) => {\r\n      const left = event.clientX;\r\n  \r\n      const delta = {\r\n        left: left - prevLeft\r\n      };\r\n  \r\n      setPrevLeft(left);\r\n  \r\n      return delta;\r\n    };\r\n  \r\n    const handlePageChange = (pageNo: number) => {\r\n        if (currentPageRef.current !== null) {      \r\n        \r\n            if (currentPage > pageNo) {\r\n              currentPageRef.current.style.animation = customPrevAnimation ? customPrevAnimation : \"prevPage .5s forwards\";\r\n            } else {\r\n              currentPageRef.current.style.animation = customNextAnimation ? customNextAnimation : \"nextPage .5s forwards\";\r\n            }\r\n            setTimeout(() => {\r\n              setCurrentPage(pageNo);\r\n              setPosLeft(0);\r\n              setPrevLeft(0);\r\n              setInitialTouch(0);\r\n              setIsDragging(false);\r\n            }, delay ? delay : 0) \r\n\r\n        }\r\n    };\r\n  \r\n    React.useEffect(() => {\r\n        let itemsPerPage = itemsOnPage ? itemsOnPage : 5;\r\n        let workingPages: Array<any>[] = [];\r\n        let workingPagesCurrentIndex = 0;\r\n\r\n        \r\n    \r\n        if (items) {\r\n          items.forEach((item) => {\r\n            if (\r\n              workingPages[workingPagesCurrentIndex] &&\r\n              workingPages[workingPagesCurrentIndex].length >= itemsPerPage\r\n            ) {\r\n              workingPagesCurrentIndex++;\r\n            }\r\n    \r\n            if (workingPages[workingPagesCurrentIndex] === undefined) {\r\n              workingPages[workingPagesCurrentIndex] = [];\r\n            }\r\n    \r\n            workingPages[workingPagesCurrentIndex].push(item);\r\n          });\r\n        }\r\n    \r\n        setPages([...workingPages]);\r\n    }, [items, itemsOnPage, setPages]);\r\n  \r\n    React.useEffect(() => { \r\n      if (!pages[currentPage]) {\r\n        setCurrentPage(currentPage - 1 > -1 ? currentPage - 1 : 0);\r\n      }\r\n    }, [currentPage, pages]);\r\n  \r\n    React.useEffect(() => {\r\n      setCurrentPage(0);\r\n    }, []);\r\n  \r\n    return (\r\n      <div className=\"pagination__paginationContainer\" ref={containerRef}>\r\n        {\r\n        topNav || (!bottomNav && !topNav) \r\n        ? \r\n        (\r\n            CustomNavigation\r\n            ?\r\n            <CustomNavigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n                infiniteFlip={infiniteFlip}\r\n                getContainerRef={() => containerRef.current}\r\n            />\r\n            :\r\n            <Navigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n                infiniteFlip={infiniteFlip}\r\n            />\r\n        )\r\n        : \r\n        null\r\n        }\r\n        <div\r\n          ref={currentPageRef}\r\n          className={`paginationContainer__currentPageDiv`}\r\n          style={divStyle}\r\n          onTouchStart={_onTouchStart}\r\n          onTouchMove={_onTouchMove}\r\n          onTouchEnd={_onTouchEnd}\r\n          onTouchCancel={_onTouchEnd}\r\n          onAnimationEnd={() => {\r\n             if (currentPageRef.current) {\r\n               currentPageRef.current.style.animation = \"\"\r\n             }\r\n          }}\r\n          aria-label=\"Current page\"\r\n        >\r\n          {pages.length &&\r\n            pages[currentPage] &&\r\n            pages[currentPage].map((item: any, index: number) => {\r\n              let objectToClone: any = {};\r\n              objectToClone[entryProp] = item;\r\n              return (\r\n                <React.Fragment key={iterationKey ? item[iterationKey] : (item.id ? item.id : index) }>\r\n                  {React.cloneElement(children, objectToClone)}\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n        </div>\r\n        {\r\n        bottomNav\r\n        ? \r\n        (\r\n            CustomNavigation\r\n            ?\r\n            <CustomNavigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n                infiniteFlip={infiniteFlip}\r\n                getContainerRef={() => containerRef.current}\r\n                getCurrentPageRef={() => currentPageRef.current}\r\n            />\r\n            :\r\n            <Navigation\r\n                handlePageChange={handlePageChange}\r\n                currentPage={currentPage}\r\n                pages={pages}\r\n                infiniteFlip={infiniteFlip}\r\n            />\r\n        )\r\n        : \r\n        null\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default PaginationSwipeable;"],"names":["Navigation","handlePageChange","currentPage","pages","infiniteFlip","React","className","onClick","disabled","width","height","viewBox","fill","xmlns","fillRule","d","length","undefined","clipRule","map","_page","index","key","PaginationAnimated","items","itemsOnPage","topNav","bottomNav","entryProp","iterationKey","customNavigation","customNextAnimation","customPrevAnimation","delay","children","containerRef","setCurrentPage","setPages","CustomNavigation","currentPageRef","pageNo","current","style","animation","setTimeout","itemsPerPage","workingPages","workingPagesCurrentIndex","forEach","item","push","getContainerRef","ref","onAnimationEnd","objectToClone","id","PaginationSwipeable","touchSensitivity","_touchSensitivity","isDragging","setIsDragging","initialTouch","setInitialTouch","posLeft","setPosLeft","prevLeft","setPrevLeft","divStyle","position","left","overflowX","_onTouchStart","event","extractPositionDelta","nativeEvent","touches","clientX","_onTouchMove","Math","abs","_onTouchEnd","_event","delta","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","getCurrentPageRef"],"mappings":"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"}